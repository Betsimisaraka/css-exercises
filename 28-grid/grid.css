/*How many columns does a grid have by default?
grid-column: 1;

What are the differences between Flexbox and Grid?
-With flexbox we only choose row or column to use.
- with grid we can use both row and column at the same time.

Why would you use flexbox rather than grid?
we use flexbox if there is only one row or one column.

Why would you use grid rather than flexbox?
We use grid rahter than flexbox because we can style many diffent row and column together at the same time.
If we have multiple row and multiple column at the same time, it is good to use grid layout.

What's a more concise way to write out the following: grid-template-columns: 10rem 10rem 10rem 10rem;
grid-template-columns: repeat (4, 10rem);

How can we specify a minimum height for a grid row, but still allow the row to increase in height if its content is too tall?
Use, grid-auto-rows: min-content;
*/

body {
  margin-left: 2rem;
  counter-reset: number;
}

main .container{
  display: grid;
  width: 408px;
  height: 100%;
  grid-template-columns: repeat(5, 80px);
  grid-template-rows: repeat(5, 80px);
  border: 5px solid red;
  column-gap: 2px;
  row-gap: 2px;
  text-align: center;
}

.item::after {
  counter-increment: number;
  content: counter(number);
}

.item {
  background-color: cyan;
}

.head {
  grid-column: 2 / 6;
  background-color: red;
  color: aliceblue;
}

.foot {
  grid-column: 1 / 4;
  background-color: green;
  color: azure;
}

.item-1 {
  grid-row: 1 / 3;
  background-color: white;
}
.item-2 {
   grid-column: 2 / 6;
   background-color: green;
}

.item-3 {
  grid-column: 1 / 3;
}

.item-5 {
  grid-column: 4 / 6;
  grid-row: 3 / 3;
  background-color: darkorange;
}
.item-6 {
  grid-column: 1 / 2;
}

.item-7 {
  grid-column: 2 / 3;
}

.item-8 {
  grid-column: 3 / 5;
}

.item-9 {
  grid-column: 5 / 6;
  grid-row: 4 / 6;
  background-color: blueviolet;
}

.item-10 {
  grid-row: 6 / 5;
  grid-column: 4 / 5;
}
